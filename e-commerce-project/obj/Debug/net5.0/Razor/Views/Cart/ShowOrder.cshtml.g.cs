#pragma checksum "D:\mvc-ecommerce\e-commerce-project\Views\Cart\ShowOrder.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a0df860a51361565d7a8765db0df1e9ef84dd293"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Cart_ShowOrder), @"mvc.1.0.view", @"/Views/Cart/ShowOrder.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\mvc-ecommerce\e-commerce-project\Views\_ViewImports.cshtml"
using e_commerce_project;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\mvc-ecommerce\e-commerce-project\Views\_ViewImports.cshtml"
using e_commerce_project.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a0df860a51361565d7a8765db0df1e9ef84dd293", @"/Views/Cart/ShowOrder.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"43d2b6c0324bc10d943d4faa178708e7e5b2a33a", @"/Views/_ViewImports.cshtml")]
    public class Views_Cart_ShowOrder : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\mvc-ecommerce\e-commerce-project\Views\Cart\ShowOrder.cshtml"
  
    Layout = "_Layout";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n\r\n<div id=\"main\">\r\n    <div class=\"spinner-grow\" role=\"status\">\r\n        <span class=\"sr-only\">Loading...</span>\r\n    </div>\r\n</div>\r\n\r\n");
            DefineSection("MyScript", async() => {
                WriteLiteral(@"
    <script>
        showOrders();
        function showOrders(){
          $.ajax({
                  url:""/Cart/GetUserOrder/"",
                  success: function(res){
                      if(res.orderExist){
                          drawTable(res.order[0].order.id);
                          fillTable(res);
                          updateCartCount(res.order.length)
                          renderTotal(res)
                      }else{
                          $(""#main"").html(""<h1>""+res.msg+""</h1>"")
                      }
                    },
                    error:function(request, status, error){
                        console.log(""sasds"")
                    }
          });
        }
        function drawTable(orderId){
                          $(""#main"").html(`
                            <div class=""container-fluid pt-5"">
                                    <div class=""row px-xl-5"">
                                        <div class=""col-lg-8 table-responsive mb");
                WriteLiteral(@"-5"">
                                            <table class=""table table-bordered text-center mb-0"">
                                                <thead class=""bg-secondary text-dark"">
                                                    <tr>
                                                        <th>Products</th>
                                                        <th>Price</th>
                                                        <th>Quantity</th>
                                                        <th>Total</th>
                                                    </tr>
                                                </thead>
                                                <tbody class=""align-middle""></tbody>
                                            </table>
                                        </div>
                                        <div class=""col-lg-4"">
                                                <div class=""card-footer border-secondary bg-transparent"">
   ");
                WriteLiteral(@"                                                 <div class=""d-flex justify-content-between mt-2"">
                                                        <h5 class=""font-weight-bold"">Total</h5>
                                                        <h5 id=""total"" class=""font-weight-bold"">$160</h5>
                                                    </div>
                                                    <button onclick=whenSubmit(${orderId}) class=""btn btn-block btn-primary my-3 py-3"">Proceed To Checkout</button>
                                                    <button onclick=whenClear(${orderId}) class=""btn btn-block btn-danger my-3 py-3""> Clear </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                          `);
        }
        function fillTable(res){
                      res.or");
                WriteLiteral(@"der.forEach(({product:{name,id,price,img},quantity,orderId})=>{
                              $(""tbody"").append(`
                        <tr>
                            <td class=""align-middle"">${name}</td>
                            <td class=""align-middle"">${price}</td>
                            <td class=""align-middle"">${quantity*price}</td>
                            <td class=""align-middle"">
                                <div class=""input-group quantity mx-auto"" style=""width: 100px;"">
                                    <div class=""input-group-btn"">
                                        <button onclick=""whenRemove(${orderId},${id})"" class=""btn btn-sm btn-primary btn-minus"" >
                                        <i class=""fa fa-minus""></i>
                                        </button>
                                    </div>
                                    <input type=""text"" class=""form-control form-control-sm bg-secondary text-center"" value=${quantity}>
              ");
                WriteLiteral(@"                      <div class=""input-group-btn"">
                                        <button onclick=""whenAdd(${id})"" class=""btn btn-sm btn-primary btn-plus"">
                                            <i class=""fa fa-plus""></i>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            
                        </tr>
                              `)
                          })
        }
        function whenAdd(productId){
                $.ajax({
                  url:""/Cart/Add/""+productId,
                  success: function(result){
                      showOrders()
                    },
                  error: function (request, status, error) {}
                });
        }
        function whenSubmit(orderId){
             $.ajax({
                  url:`/Cart/Submit/${orderId}`,
                  success: function(res){
           ");
                WriteLiteral(@"           showOrders()
                      updateCartCount("""")
                  }
                 });
        }
        function whenClear(orderId){
                $.ajax({
                  url:`/Cart/Clear/${orderId}`,
                  success: function(result){  
                      showOrders()
                      updateCartCount("""")
                  }
                });
        }
        function whenRemove(orderId,productId){
              $.ajax({
                  url:`/Cart/remove/${orderId}?productId=${productId}`,
                  success: function(res){
                      showOrders()
                      if(res.cleared){
                          updateCartCount("""")
                      }else{
                          updateCartCount(res.count)
                      }
                  }
                 });
        }

        function updateCartCount(count){
            localStorage.setItem(""count"",count)
            document.dispatchEvent(new Cu");
                WriteLiteral("stomEvent(\"countChange\"))\r\n        }\r\n        function renderTotal({order}){\r\n            $(\"#total\").text(\"$ \"+order.reduce((total,Val)=>total+(Val.quantity*Val.product.price), 0))\r\n        }\r\n    </script>\r\n");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
